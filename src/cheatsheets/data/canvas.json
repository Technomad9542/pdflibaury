{
  "id": "canvas",
  "title": "HTML Canvas",
  "intro": "|\nThis HTML  Canvas quick reference cheat sheet lists the common HTML5  Canvas design tags in readable layout.",
  "tags": [
    "web"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#cc5534]",
  "content": "## Getting Started\n\n### Basic Setup\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Canvas Example</title>\n  </head>\n  <body>\n    <canvas\n      id=\"myCanvas\"\n      width=\"500\"\n      height=\"400\"\n      style=\"border:1px solid #000000;\"\n    ></canvas>\n    <script src=\"script.js\"></script>\n  </body>\n</html>\n```\n\n### Getting the Context\n\n```js\nconst canvas = document.getElementById('myCanvas');\nconst ctx = canvas.getContext('2d');\n```\n\n## Drawing Shapes\n\n### Rectangles\n\n```js\nctx.fillStyle = 'red';\nctx.fillRect(10, 10, 150, 100); // x, y, width, height\n\nctx.strokeStyle = 'blue';\nctx.lineWidth = 5;\nctx.strokeRect(200, 10, 150, 100); // x, y, width, height\n\nctx.clearRect(15, 15, 30, 30); // x, y, width, height\n```\n\n## Paths\n\n### Lines\n\n```js\nctx.beginPath();\nctx.moveTo(50, 50); // Starting point\nctx.lineTo(200, 50); // Ending point\nctx.lineTo(200, 200); // Next line ending point\nctx.closePath(); // Connects the end point to the start point\nctx.stroke();\n```\n\n### Circles\n\n```js\nctx.beginPath();\nctx.arc(150, 150, 75, 0, 2 * Math.PI); // x, y, radius, startAngle, endAngle\nctx.fillStyle = 'green';\nctx.fill();\nctx.stroke();\n```\n\n### Arcs\n\n```js\nctx.beginPath();\nctx.arc(150, 150, 75, 0, Math.PI); // x, y, radius, startAngle, endAngle\nctx.stroke();\n```\n\n## Bezier and Quadratic Curves\n\n### Quadratic Curve\n\n```js\nctx.beginPath();\nctx.moveTo(50, 250);\nctx.quadraticCurveTo(200, 100, 400, 250); // cpX, cpY, endX, endY\nctx.stroke();\n```\n\n### Bezier Curve\n\n```js\nctx.beginPath();\nctx.moveTo(50, 300);\nctx.bezierCurveTo(150, 100, 350, 500, 450, 300); // cp1X, cp1Y, cp2X, cp2Y, endX, endY\nctx.stroke();\n```\n\n### Text\n\n```js\nctx.font = '30px Arial';\nctx.fillStyle = 'black';\nctx.fillText('Hello Canvas', 10, 50); // text, x, y\n\nctx.strokeText('Hello Canvas', 10, 100); // text, x, y\n```\n\n### Images\n\n```js\nconst img = new Image();\nimg.src = 'path/to/image.jpg';\nimg.onload = () => {\n  ctx.drawImage(img, 10, 10); // img, x, y\n  ctx.drawImage(img, 50, 50, 100, 100); // img, x, y, width, height\n  ctx.drawImage(img, 100, 100, 100, 100, 150, 150, 200, 200); // img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight\n};\n```\n\n## Transformations\n\n### Translation\n\n```js\nctx.translate(100, 100); // x, y\nctx.fillRect(0, 0, 50, 50);\n```\n\n### Rotation\n\n```js\nctx.rotate((Math.PI / 180) * 45); // Angle in radians\nctx.fillRect(100, 100, 50, 50);\n```\n\n### Scaling\n\n```js\nctx.scale(2, 2); // x, y\nctx.fillRect(50, 50, 50, 50);\n```\n\n## Gradients\n\n### Linear Gradient\n\n```js\nconst linearGradient = ctx.createLinearGradient(0, 0, 200, 0); // x0, y0, x1, y1\nlinearGradient.addColorStop(0, 'red');\nlinearGradient.addColorStop(1, 'blue');\nctx.fillStyle = linearGradient;\nctx.fillRect(10, 10, 200, 100);\n```\n\n### Radial Gradient\n\n```js\nconst radialGradient = ctx.createRadialGradient(75, 50, 5, 90, 60, 100); // x0, y0, r0, x1, y1, r1\nradialGradient.addColorStop(0, 'red');\nradialGradient.addColorStop(1, 'blue');\nctx.fillStyle = radialGradient;\nctx.fillRect(10, 10, 200, 100);\n```\n\n### Patterns\n\n```js\nconst img = new Image();\nimg.src = 'path/to/image.jpg';\nimg.onload = () => {\n  const pattern = ctx.createPattern(img, 'repeat'); // 'repeat', 'repeat-x', 'repeat-y', 'no-repeat'\n  ctx.fillStyle = pattern;\n  ctx.fillRect(0, 0, 300, 300);\n};\n```\n\n### Shadows\n\n```js\nctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\nctx.shadowBlur = 10;\nctx.shadowOffsetX = 5;\nctx.shadowOffsetY = 5;\n\nctx.fillStyle = 'red';\nctx.fillRect(100, 100, 100, 100);\n```\n\n## Compositing\n\n### Global Alpha\n\n```js\nctx.globalAlpha = 0.5;\nctx.fillStyle = 'red';\nctx.fillRect(100, 100, 100, 100);\n\nctx.fillStyle = 'blue';\nctx.fillRect(150, 150, 100, 100);\n```\n\n### Global Composite Operation\n\n```js\nctx.globalCompositeOperation = 'source-over'; // Default\nctx.fillStyle = 'red';\nctx.fillRect(100, 100, 100, 100);\n\nctx.globalCompositeOperation = 'destination-over';\nctx.fillStyle = 'blue';\nctx.fillRect(150, 150, 100, 100);\n```\n\n### Animations\n\n```js\nlet x = 0;\nfunction draw() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = 'blue';\n  ctx.fillRect(x, 100, 50, 50);\n  x += 2;\n  requestAnimationFrame(draw);\n}\ndraw();\n```\n\n## Also read\n\n- [MDN doc ](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API)\n"
}