{
  "id": "ssh",
  "title": "SSH",
  "intro": "|\nThis quick reference cheat sheet provides various for using SSH.",
  "tags": [
    "protocol",
    "remote",
    "network",
    "22"
  ],
  "categories": [
    "Linux Command"
  ],
  "background": "bg-blue-400",
  "content": "## Getting Started\n\n### Connecting\n\nConnect to a server (default port 22)\n\n```shell script\n$ ssh root@192.168.1.5\n```\n\nConnect on a specific port\n\n```shell script\n$ ssh root@192.168.1.5 -p 6222\n```\n\nConnect via pem file (0400 permissions)\n\n```shell script\n$ ssh -i /path/file.pem root@192.168.1.5\n```\n\nSee: [SSH Permissions](/chmod#ssh-permissions)\n\n### Executing\n\nExecutes remote command\n\n```shell script\n$ ssh root@192.168.1.5 'ls -l'\n```\n\nInvoke a local script\n\n```shell script\n$ ssh root@192.168.1.5 bash < script.sh\n```\n\nCompresses and downloads from a server\n\n```shell script {.wrap}\n$ ssh root@192.168.1.5 \"tar cvzf - ~/source\" > output.tgz\n```\n\n### SCP {.row-span-2}\n\nCopies from remote to local\n\n```shell script\n$ scp user@server:/dir/file.ext dest/\n```\n\nCopies between two servers\n\n```shell script\n$ scp user@server:/file user@server:/dir\n```\n\nCopies from local to remote\n\n```shell script\n$ scp dest/file.ext user@server:/dir\n```\n\nCopies a whole folder\n\n```shell script\n$ scp -r user@server:/dir dest/\n```\n\nCopies all files from a folder\n\n```shell script\n$ scp user@server:/dir/* dest/\n```\n\nCopies from a server folder to the current folder\n\n```shell script\n$ scp user@server:/dir/* .\n```\n\n### Config location\n\n| File Path                | Description          |\n| ------------------------ | -------------------- |\n| `/etc/ssh/ssh_config`    | System-wide config   |\n| `~/.ssh/config`          | User-specific config |\n| `~/.ssh/id_{type}`       | Private key          |\n| `~/.ssh/id_{type}.pub`   | Public key           |\n| `~/.ssh/known_hosts`     | Known Servers        |\n| `~/.ssh/authorized_keys` | Authorized login key |\n\n### SCP Options\n\n| Options       | Description                                    |\n| ------------- | ---------------------------------------------- |\n| scp `-r`      | <yel>R</yel>ecursively copy entire directories |\n| scp `-C`      | <yel>C</yel>ompresses data                     |\n| scp `-v`      | Prints <yel>v</yel>erbose info                 |\n| scp `-P` 8080 | Uses a specific <yel>P</yel>ort                |\n| scp `-B`      | <yel>B</yel>atch mode _(Prevents password)_    |\n| scp `-p`      | <yel>P</yel>reserves times and modes           |\n\n### Config sample\n\n```toml\nHost server1\n    HostName 192.168.1.5\n    User root\n    Port 22\n    IdentityFile ~/.ssh/server1.key\n```\n\nLaunch by alias\n\n```shell script\n$ ssh server1\n```\n\nSee: Full [Config Options](https://linux.die.net/man/5/ssh_config)\n\n### ProxyJump\n\n```shell script\n$ ssh -J proxy_host1 remote_host2\n```\n\n```shell script {.wrap}\n$ ssh -J user@proxy_host1 user@remote_host2\n```\n\nMultiple jumps\n\n```shell script {.wrap}\n$ ssh -J user@proxy_host1:port1,user@proxy_host2:port2 user@remote_host3\n```\n\n### ssh-copy-id\n\n```shell script {.wrap}\n$ ssh-copy-id user@server\n```\n\nCopy to alias server\n\n```shell script {.wrap}\n$ ssh-copy-id server1\n```\n\nCopy specific key\n\n```shell script {.wrap}\n$ ssh-copy-id -i ~/.ssh/id_rsa.pub user@server\n```\n\n## SSH keygen {.cols-5}\n\n### ssh-keygen {.col-span-2}\n\n```shell script\n$ ssh-keygen -t rsa -b 4096 -C \"your@mail.com\"\n```\n\n---\n\n| -   | -    | -                             |\n| --- | ---- | ----------------------------- |\n|     | `-t` | [Type](#key-type) of key      |\n|     | `-b` | The number of bits in the key |\n|     | `-C` | Provides a new comment        |\n\n{.left-text}\n\nGenerate an RSA 4096 bit key with email as a comment\n\n### Generate {.col-span-2 .row-span-2}\n\nGenerate a key interactively\n\n```shell script\n$ ssh-keygen\n```\n\nSpecify filename\n\n```shell script\n$ ssh-keygen -f ~/.ssh/filename\n```\n\nGenerate public key from private key\n\n```shell script\n$ ssh-keygen -y -f private.key > public.pub\n```\n\nChange comment\n\n```shell script\n$ ssh-keygen -c -f ~/.ssh/id_rsa\n```\n\nChange private key passphrase\n\n```shell script\n$ ssh-keygen -p -f ~/.ssh/id_rsa\n```\n\n### Key type\n\n- rsa\n- ed25519\n- dsa\n- ecdsa\n\n### known_hosts {.col-span-2}\n\nSearch from known_hosts\n\n```shell script\n$ ssh-keygen -F <ip/hostname>\n```\n\nRemove from known_hosts\n\n```shell script\n$ ssh-keygen -R <ip/hostname>\n```\n\n### Key format\n\n- PEM\n- PKCS8\n\n## SSH Tunneling\n\n### SSH Tunnel Options {.row-span-2}\n\n| Option | Description                                            |\n| ------ | :----------------------------------------------------- |\n| `-L`   | Local port forwarding                                  |\n| `-R`   | Remote port forwarding                                 |\n| `-D`   | Dynamic port forwarding                                |\n| `-f`   | Run in background                                      |\n| `-N`   | Do not execute a remote command                        |\n| `-g`   | Allow remote hosts to connect to local forwarded ports |\n\n{.left-text}\n\nmore details on flag above with `man ssh`\n\n### Local Port Forwarding {.col-span-2}\n\n```bash\n# Forward a local port to a remote server\nssh -L local_port:remote_host:remote_port user@ssh_server\n\n# Example: Forward local port 8080 to remote port 80 on example.com\nssh -L 8080:example.com:80 user@ssh_server\n```\n\n### Dynamic Port Forwarding {.col-span-2}\n\n```bash\n# Create a SOCKS proxy on a local port\nssh -D local_port user@ssh_server\n\n# Create a SOCKS proxy on local port 1080 in the background\nssh -f -N -D 1080 user@ssh_server\n```\n\n### Background Tunnel {.col-span-3}\n\n```bash\n# Create a local port forwarding tunnel in the background\nssh -f -N -L local_port:remote_host:remote_port user@ssh_server\n```\n\n### Multiple Tunnels {.col-span-3}\n\n```bash\n# Create multiple tunnels in a single SSH command\nssh -L 8080:example.com:80 -L 3306:db.example.com:3306 user@ssh_server\n```\n\n### Combining Options {.col-span-3}\n\n```bash\n# In background, no command, allow remote host, local port forward, identity_file\nssh -f -N -g -L 8080:example.com:80 -i ~/.ssh/custom_key user@ssh_server\n```\n\n## Also see\n\n- [OpenSSH Config File Examples](https://www.cyberciti.biz/faq/create-ssh-config-file-on-linux-unix/) _(cyberciti.biz)_\n- [ssh_config](https://linux.die.net/man/5/ssh_config) _(linux.die.net)_\n- [man-ssh](https://man7.org/linux/man-pages/man1/ssh.1.html)\n"
}