{
  "id": "github-cli",
  "title": "Github CLI",
  "intro": "A quick reference to Github CLI, an open-source command line tool that enables GitHub on your terminal.",
  "tags": [
    "Github",
    "CICD",
    "CLI"
  ],
  "categories": [
    "Toolkit"
  ],
  "background": "bg-[#808080]",
  "content": "## Getting Started\n\n### Installation\n\n**Windows**\n\n| Tool   | Install                          | Upgrade                          |\n| :----- | :------------------------------- | :------------------------------- |\n| WinGet | `winget install --id Github.cli` | `winget upgrade --id GitHub.cli` |\n| Scoop  | `scoop install gh`               | `scoop update gh`                |\n| Choco  | `choco install gh`               | `choco upgrade gh`               |\n\n{.show-header}\n\n**Mac OS**\n\n| Tool     | Install                | Upgrade                                        |\n| :------- | :--------------------- | :--------------------------------------------- |\n| Brew     | `brew install gh`      | `brew upgrade gh`                              |\n| MacPorts | `sudo port install gh` | `sudo port selfupdate && sudo port upgrade gh` |\n\n{.show-header}\n\n**Linux**\n\nSee the [install instructions](https://github.com/cli/cli/blob/trunk/docs/install_linux.md) for other Linux\ndistributions.\n\nInstallation Script:\n\n```bash\ntype -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)\ncurl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&& echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n&& sudo apt update \\\n&& sudo apt install gh -y\n```\n\n---\n\n### Basic Usage\n\n**Help and Documentation**\n\nDisplay command options:\n\n| Command             | Description                                                                                                    |\n| :------------------ | :------------------------------------------------------------------------------------------------------------- |\n| `gh help [command]` | Help provides help for any command in the application. Simply type gh help [path to command] for full details. |\n\n**Authentication**\n\n| Command             | Description                                                       |\n| :------------------ | :---------------------------------------------------------------- |\n| `gh auth login`     | Default authentication with web-based browser                     |\n| `gh auth logout`    | Removes the authentication configuration for a host               |\n| `gh auth refresh`   | Expand or fix the permission scopes for stored credentials        |\n| `gh auth setup-git` | Configures git to use GitHub CLI as a credential helper           |\n| `gh auth status`    | Verifies and displays information about your authentication state |\n| `gh auth token`     | Print the auth token gh is configured to use                      |\n\nWith Github token:\n\n```shell\n$ gh auth --with-token < token.txt\n```\n\n### Repository Management\n\n**General**\n\n| Command                 | Description                                       |\n| :---------------------- | :------------------------------------------------ |\n| `gh repo create`        | Create a new GitHub repository                    |\n| `gh repo list [target]` | List repositories owned by a user or organization |\n\n**Targets**\n\n| Command                      | Description                                                    |\n| :--------------------------- | :------------------------------------------------------------- |\n| `gh repo archive [repo]`     | Archive a GitHub repository                                    |\n| `gh repo clone [dir]`        | Clone a GitHub repository locally                              |\n| `gh repo delete [repo]`      | Delete a GitHub repository                                     |\n| `gh repo deploy-key`         | Manage deploy keys in a repository                             |\n| `gh repo edit [repo]`        | Edit repository settings                                       |\n| `gh repo fork [repo]`        | Create a fork of a repository                                  |\n| `gh repo rename [name]`      | Rename a GitHub repository                                     |\n| `gh repo set-default [repo]` | This command sets the default remote repository                |\n| `gh repo sync [dest-repo]`   | Sync destination repository from source repository             |\n| `gh repo view [repo]`        | Display the description and the README of a GitHub repository. |\n\n### Issues\n\n**Search Issues**\n\n| Command                    | Description                 |\n| :------------------------- | :-------------------------- |\n| `gh search issues [query]` | Search for issues on GitHub |\n\n**Examples**\n\n```bash\n# search issues matching set of keywords \"readme\" and \"typo\"\n$ gh search issues readme typo\n\n# search issues matching phrase \"broken feature\"\n$ gh search issues \"broken feature\"\n\n# search issues and pull requests in cli organization\n$ gh search issues --include-prs --owner=cli\n\n# search open issues assigned to yourself\n$ gh search issues --assignee=@me --state=open\n\n# search issues with numerous comments\n$ gh search issues --comments=\">100\"\n\n# search issues without label \"bug\"\n$ gh search issues -- -label:bug\n```\n\n### Pull Requests\n\n**Pull Request Actions**\n\n| Command        | Description                               |\n| :------------- | :---------------------------------------- |\n| `gh pr create` | Create a pull request on GitHub           |\n| `gh pr list`   | List pull requests in a GitHub repository |\n| `gh pr status` | Show status of relevant pull requests     |\n\n**Example**\n\n```shell\n$ gh pr status\n```\n\nSample Output:\n\n```\nCurrent branch\n  #12 Remove the test feature [user:patch-2]\n   - All checks failing - Review required\n\nCreated by you\n  You have no open pull requests\n\nRequesting a code review from you\n  #13 Fix tests [branch]\n  - 3/4 checks failing - Review required\n  #15 New feature [branch]\n   - Checks passing - Approved\n```\n\n### Github Actions\n\n**General Actions**\n\n| Command               | Description                                                                         |\n| :-------------------- | :---------------------------------------------------------------------------------- |\n| `gh workflow disable` | Disable a workflow, preventing it from running or showing up when listing workflows |\n| `gh workflow enable`  | Enable a workflow, allowing it to be run and show up when listing workflows         |\n| `gh workflow list`    | List workflow files, hiding disabled workflows by default                           |\n| `gh workflow run`     | Create a workflow_dispatch event for a given workflow                               |\n| `gh workflow view`    | View the summary of a workflow                                                      |\n\n**Running Actions**\n\n| Command           | Description                                                         |\n| :---------------- | :------------------------------------------------------------------ |\n| `gh run cancel`   | Cancel a workflow run                                               |\n| `gh run delete`   | Delete a workflow run                                               |\n| `gh run download` | Download artifacts generated by a GitHub Actions workflow run       |\n| `gh run list`     | List recent workflow runs                                           |\n| `gh run rerun`    | Rerun an entire run, only failed jobs, or a specific job from a run |\n| `gh run view`     | View a summary of a workflow run                                    |\n| `gh run watch`    | Watch a run until it completes, showing its progress                |\n\n### Aliases\n\n**General Alias Settings**\n\n| Command           | Description                                                      |\n| :---------------- | :--------------------------------------------------------------- |\n| `gh alias delete` | Delete set aliases                                               |\n| `gh alias import` | Import aliases from the contents of a YAML file                  |\n| `gh alias list`   | Prints out all of the aliases gh is configured to use            |\n| `gh alias set`    | Define a word that will expand to a full gh command when invoked |\n\n### Releases\n\n**General Actions**\n\n| Command             | Description                                  |\n| :------------------ | :------------------------------------------- |\n| `gh release create` | Create a new GitHub Release for a repository |\n| `gh release list`   | List releases in a repository                |\n\n**Target Commands**\n\n| Command                   | Description                             |\n| :------------------------ | :-------------------------------------- |\n| `gh release delete`       | Delete a release                        |\n| `gh release delete-asset` | Delete an asset from a release          |\n| `gh release download`     | Download assets from a GitHub release   |\n| `gh release edit`         | Edit a release                          |\n| `gh release upload`       | Upload asset files to a GitHub Release  |\n| `gh release view`         | View information about a GitHub Release |\n\n### Configuration\n\n**Targeted Settings**\n\n| Command                 | Description                                         |\n| :---------------------- | :-------------------------------------------------- |\n| `gh config clear-cache` | Clear the cli cache                                 |\n| `gh config get`         | Print the value of a given configuration key        |\n| `gh config list`        | Print a list of configuration keys and values       |\n| `gh config set`         | Update configuration with a value for the given key |\n"
}