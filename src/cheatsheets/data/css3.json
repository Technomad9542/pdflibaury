{
  "id": "css3",
  "title": "CSS 3",
  "intro": "|\nThis is a quick reference cheat sheet for CSS goodness, listing selector syntax, properties, units and other useful bits of information.",
  "tags": [
    "web",
    "css",
    "style"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#3473b5]",
  "content": "## Getting Started\n\n### Introduction {.row-span-3}\n\nCSS is rich in capabilities and is more than simply laying out pages.\n\n#### External stylesheet\n\n```html {.wrap}\n<link href=\"./path/to/stylesheet/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n```\n\n#### Internal stylesheet\n\n```html\n<style>\n  body {\n    background-color: linen;\n  }\n</style>\n```\n\n#### Inline styles\n\n```html {.wrap}\n<h2 style=\"text-align: center;\">Centered text</h2>\n\n<p style=\"color: blue; font-size: 18px;\">Blue, 18-point text</p>\n```\n\n### Add class\n\n```html\n<div class=\"classname\"></div>\n<div class=\"class1 classn ...\"></div>\n```\n\nSupport multiple classes on one element.\n\n### !important\n\n```css\n.post-title {\n  color: blue !important;\n}\n```\n\nOverrides all previous styling rules.\n\n### Selector\n\n```css\nh1 {\n}\n#job-title {\n}\ndiv.hero {\n}\ndiv > p {\n}\n```\n\nSee: [Selectors](#css-selectors)\n\n### Text color\n\n```css\ncolor: #2a2aff;\ncolor: green;\ncolor: rgb(34, 12, 64, 0.6);\ncolor: hsla(30 100% 50% / 0.6);\n```\n\nSee: [Colors](#css-colors)\n\n### Background\n\n```css\nbackground-color: blue;\nbackground-image: url('nyan-cat.gif');\nbackground-image: url('../image.png');\n```\n\nSee: [Backgrounds](#css-backgrounds)\n\n### Font\n\n```css\n.page-title {\n  font-weight: bold;\n  font-size: 30px;\n  font-family: 'Courier New';\n}\n```\n\nSee: [Fonts](#css-fonts)\n\n### Position\n\n```css\n.box {\n  position: relative;\n  top: 20px;\n  left: 20px;\n}\n```\n\nSee also: [Position](https://learn-the-web.algonquindesign.ca/topics/css-layout-cheat-sheet/)\n\n### Animation\n\n```css\nanimation: 300ms linear 0s infinite;\n\nanimation: bounce 300ms linear infinite;\n```\n\nSee: [Animation](#css-animation)\n\n### Comment\n\n```css\n/* This is a single line comment */\n\n/* This is a \n   multi-line comment */\n```\n\n### Flex layout\n\n```css\ndiv {\n  display: flex;\n  justify-content: center;\n}\ndiv {\n  display: flex;\n  justify-content: flex-start;\n}\n```\n\nSee: [Flexbox](#css-flexbox) | [Flex Tricks](#css-flexbox-tricks)\n\n### Grid layout\n\n```css\n#container {\n  display: grid;\n  grid: repeat(2, 60px) / auto-flow 80px;\n}\n\n#container > div {\n  background-color: #8ca0ff;\n  width: 50px;\n  height: 50px;\n}\n```\n\nSee: [Grid Layout](#css-grid-layout)\n\n### Variable & Counter\n\n```css\ncounter-set: subsection;\ncounter-increment: subsection;\ncounter-reset: subsection 0;\n\n:root {\n  --bg-color: brown;\n}\nelement {\n  background-color: var(--bg-color);\n}\n```\n\nSee: [Dynamic content](#css-dynamic-content)\n\n## CSS Selectors\n\n### Examples {.row-span-2}\n\n#### Groups Selector\n\n```css\nh1,\nh2 {\n  color: red;\n}\n```\n\n#### Chaining Selector\n\n```css\nh3.section-heading {\n  color: blue;\n}\n```\n\n#### Attribute Selector\n\n```css\ndiv[attribute='SomeValue'] {\n  background-color: red;\n}\n```\n\n#### First Child Selector\n\n```css\np:first-child {\n  font-weight: bold;\n}\n```\n\n#### No Children Selector\n\n```css\n.box:empty {\n  background: lime;\n  height: 80px;\n  width: 80px;\n}\n```\n\n### Basic\n\n|              |                             |\n| ------------ | --------------------------- |\n| `*`          | All elements                |\n| `div`        | All div tags                |\n| `.classname` | All elements with class     |\n| `#idname`    | Element with ID             |\n| `div,p`      | All divs and paragraphs     |\n| `#idname *`  | All elements inside #idname |\n\nSee also: [Type](https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors) /\n[Class](https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors) /\n[ID](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors) /\n[Universal](https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors) selectors\n\n### Combinators\n\n| Selector        | Description                           |\n| --------------- | ------------------------------------- |\n| `div.classname` | Div with certain classname            |\n| `div#idname`    | Div with certain ID                   |\n| `div p`         | Paragraphs inside divs                |\n| `div > p`       | All p tags<br>_one level deep in div_ |\n| `div + p`       | P tags immediately after div          |\n| `div ~ p`       | P tags preceded by div                |\n\nSee also: [Adjacent](https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_combinator) /\n[Sibling](https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator) /\n[Child](https://developer.mozilla.org/en-US/docs/Web/CSS/Child_combinator) selectors\n\n### Attribute selectors\n\n|                      |                                    |\n| -------------------- | ---------------------------------- | ---------------------------- |\n| `a[target]`          | With a <yel>target</yel> attribute |\n| `a[target=\"_blank\"]` | Open in new tab                    |\n| `a[href^=\"/index\"]`  | Starts with <yel>/index</yel>      |\n| `[class              | =\"chair\"]`                         | Starts with <yel>chair</yel> |\n| `[class*=\"chair\"]`   | containing <yel>chair</yel>        |\n| `[title~=\"chair\"]`   | Contains the word <yel>chair</yel> |\n| `a[href$=\".doc\"]`    | Ends with <yel>.doc</yel>          |\n| `[type=\"button\"]`    | Specified type                     |\n\nSee also: [Attribute selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors)\n\n### User action pseudo classes\n\n|              |                         |\n| ------------ | ----------------------- |\n| `a:link    ` | Link in normal state    |\n| `a:active  ` | Link in clicked state   |\n| `a:hover   ` | Link with mouse over it |\n| `a:visited ` | Visited link            |\n\n### Pseudo classes\n\n|                   |                                                                                         |\n| ----------------- | --------------------------------------------------------------------------------------- |\n| `p::after`        | Add content after p                                                                     |\n| `p::before`       | Add content before p                                                                    |\n| `p::first-letter` | First letter in p                                                                       |\n| `p::first-line`   | First line in p                                                                         |\n| `::selection`     | Selected by user                                                                        |\n| `::placeholder`   | [Placeholder](https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder) attribute |\n| `:root`           | Documents root element                                                                  |\n| `:target`         | Highlight active anchor                                                                 |\n| `div:empty`       | Element with no children                                                                |\n| `p:lang(en)`      | P with en language attribute                                                            |\n| `:not(span)`      | Element that's not a span                                                               |\n\n### Input pseudo classes\n\n|                       |                                                                                             |\n| --------------------- | ------------------------------------------------------------------------------------------- |\n| `input:checked`       | Checked inputs                                                                              |\n| `input:disabled`      | Disabled inputs                                                                             |\n| `input:enabled`       | Enabled inputs                                                                              |\n| `input:focus`         | Input has focus                                                                             |\n| `input:in-range`      | Value in range                                                                              |\n| `input:out-of-range`  | Input value out of range                                                                    |\n| `input:valid`         | Input with valid value                                                                      |\n| `input:invalid`       | Input with invalid value                                                                    |\n| `input:optional`      | No required attribute                                                                       |\n| `input:required`      | Input with required attribute                                                               |\n| `input:read-only`     | With readonly attribute                                                                     |\n| `input:read-write`    | No readonly attribute                                                                       |\n| `input:indeterminate` | With [indeterminate](https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate) state |\n\n### Structural pseudo classes\n\n|                         |                            |\n| ----------------------- | -------------------------- |\n| `p:first-child`         | First child                |\n| `p:last-child`          | Last child                 |\n| `p:first-of-type`       | First of some type         |\n| `p:last-of-type`        | Last of some type          |\n| `p:nth-child(2)`        | Second child of its parent |\n| `p:nth-child(3n42)`     | Nth-child (an + b) formula |\n| `p:nth-last-child(2)`   | Second child from behind   |\n| `p:nth-of-type(2)`      | Second p of its parent     |\n| `p:nth-last-of-type(2)` | ...from behind             |\n| `p:only-of-type`        | Unique of its parent       |\n| `p:only-child`          | Only child of its parent   |\n\n## CSS Fonts\n\n### Properties {.row-span-3}\n\n| Property          | Description     |\n| ----------------- | --------------- |\n| `font-family:`    | \\<font> <fontN> |\n| `font-size:`      | \\<size>         |\n| `letter-spacing:` | \\<size>         |\n| `line-height:`    | \\<number>       |\n\n| `font-weight:` | \\<number> / bold / normal | | `font-style:` | italic / normal | | `text-decoration:` | underline /\nnone |\n\n| `text-align:` | left / right<br>center / justify | | `text-transform:` | capitalize / uppercase / lowercase |\n{.left-text}\n\nSee also: [Font](https://developer.mozilla.org/en-US/docs/Web/CSS/font)\n\n### Shorthand {.secondary .col-span-2}\n\n|         | style    | weight | size (required) |     | line-height | family            |\n| ------- | -------- | ------ | --------------- | --- | ----------- | ----------------- |\n| `font:` | `italic` | `400`  | `14px`          | `/` | `1.5`       | `sans-serif`      |\n|         | style    | weight | size (required) |     | line-height | family (required) |\n\n### Example\n\n```css\nfont-family: Arial, sans-serif;\nfont-size: 12pt;\nletter-spacing: 0.02em;\n```\n\n### Case {.row-span-2}\n\n```css\n/* Hello */\ntext-transform: capitalize;\n\n/* HELLO */\ntext-transform: uppercase;\n\n/* hello */\ntext-transform: lowercase;\n```\n\n### @font-face\n\n```css\n@font-face {\n  font-family: 'Glegoo';\n  src: url('../Glegoo.woff');\n}\n```\n\n## CSS Colors\n\n### Named color\n\n```css\ncolor: red;\ncolor: orange;\ncolor: tan;\ncolor: rebeccapurple;\n```\n\n### Hexadecimal color\n\n```css\ncolor: #090;\ncolor: #009900;\ncolor: #090a;\ncolor: #009900aa;\n```\n\n### rgb() Colors\n\n```css\ncolor: rgb(34, 12, 64, 0.6);\ncolor: rgba(34, 12, 64, 0.6);\ncolor: rgb(34 12 64 / 0.6);\ncolor: rgba(34 12 64 / 0.3);\ncolor: rgb(34 12 64 / 60%);\ncolor: rgba(34.6 12 64 / 30%);\n```\n\n### HSL Colors\n\n```css\ncolor: hsl(30, 100%, 50%, 0.6);\ncolor: hsla(30, 100%, 50%, 0.6);\ncolor: hsl(30 100% 50% / 0.6);\ncolor: hsla(30 100% 50% / 0.6);\ncolor: hsl(30 100% 50% / 60%);\ncolor: hsla(30.2 100% 50% / 60%);\n```\n\n### Other\n\n```css\ncolor: inherit;\ncolor: initial;\ncolor: unset;\ncolor: transparent;\n\ncolor: currentcolor; /* keyword */\n```\n\n## CSS Backgrounds\n\n### Properties {.row-span-2}\n\n| Property      | Description   |\n| ------------- | ------------- |\n| `background:` | _(Shorthand)_ |\n\n| `background-color:` | See: [Colors](#css-colors) | | `background-image:` | url(...) | | `background-position:` |\nleft/center/right<br/>top/center/bottom | | `background-size:` | cover X Y | | `background-clip:` |\nborder-box<br/>padding-box<br/>content-box | | `background-repeat:` | no-repeat<br/>repeat-x<br/>repeat-y | |\n`background-attachment:` | scroll/fixed/local | {.left-text}\n\n### Shorthand {.secondary .col-span-2}\n\n|               | color  | image        | positionX | positionY |     | size           | repeat      | attachment |\n| ------------- | ------ | ------------ | --------- | --------- | --- | -------------- | ----------- | ---------- |\n| `background:` | `#ff0` | `url(a.jpg)` | `left`    | `top`     | `/` | `100px` `auto` | `no-repeat` | `fixed;`   |\n| `background:` | `#abc` | `url(b.png)` | `center`  | `center`  | `/` | `cover`        | `repeat-x`  | `local;`   |\n|               | color  | image        | posX      | posY      |     | size           | repeat      | attach..   |\n\n### Examples {.col-span-2}\n\n```css {.wrap}\nbackground: url(img_man.jpg) no-repeat center;\n\nbackground:\n  url(img_flwr.gif) right bottom no-repeat,\n  url(paper.gif) left top repeat;\n\nbackground: rgb(2, 0, 36);\nbackground: linear-gradient(\n  90deg,\n  rgba(2, 0, 36, 1) 0%,\n  rgba(13, 232, 230, 1) 35%,\n  rgba(0, 212, 255, 1) 100%\n);\n```\n\n## CSS The Box Model\n\n### Maximums/Minimums\n\n```css\n.column {\n  max-width: 200px;\n  width: 500px;\n}\n```\n\nSee also: [max-width](https://developer.mozilla.org/en-US/docs/Web/CSS/max-width) /\n[min-width](https://developer.mozilla.org/en-US/docs/Web/CSS/min-width) /\n[max-height](https://developer.mozilla.org/en-US/docs/Web/CSS/max-height) /\n[min-height](https://developer.mozilla.org/en-US/docs/Web/CSS/min-height)\n\n### Margin / Padding\n\n```css\n.block-one {\n  margin: 20px;\n  padding: 10px;\n}\n```\n\nSee also: [Margin](https://developer.mozilla.org/en-US/docs/Web/CSS/margin) /\n[Padding](https://developer.mozilla.org/en-US/docs/Web/CSS/padding)\n\n### Box-sizing\n\n```css\n.container {\n  box-sizing: border-box;\n}\n```\n\nSee also: [Box-sizing](https://developer.mozilla.org/en-US/docs/Web/CSS/Box-sizing)\n\n### Visibility\n\n```css\n.invisible-elements {\n  visibility: hidden;\n}\n```\n\nSee also: [Visibility](https://developer.mozilla.org/en-US/docs/Web/CSS/visibility)\n\n### Auto keyword\n\n```css\ndiv {\n  margin: auto;\n}\n```\n\nSee also: [Margin](https://developer.mozilla.org/en-US/docs/Web/CSS/margin)\n\n### Overflow\n\n```css\n.small-block {\n  overflow: scroll;\n}\n```\n\nSee also: [Overflow](https://developer.mozilla.org/en-US/docs/Web/CSS/overflow)\n\n## CSS Animation {.cols-5}\n\n### Shorthand {.col-span-5 .secondary}\n\n|              | name     | duration | timing-function | delay   | count      | direction           | fill-mode | play-state |\n| ------------ | -------- | -------- | --------------- | ------- | ---------- | ------------------- | --------- | ---------- |\n| `animation:` | `bounce` | `300ms`  | `linear`        | `100ms` | `infinite` | `alternate-reverse` | `both`    | `reverse`  |\n|              | name     | duration | timing-function | delay   | count      | direction           | fill-mode | play-state |\n\n### Properties {.row-span-2 .col-span-2}\n\n| Property                     | Value                                                  |\n| ---------------------------- | ------------------------------------------------------ |\n| `animation:`                 | _(shorthand)_                                          |\n| `animation-name:`            | \\<name>                                                |\n| `animation-duration:`        | \\<time>ms                                              |\n| `animation-timing-function:` | ease / linear / ease-in / ease-out / ease-in-out       |\n| `animation-delay:`           | \\<time>ms                                              |\n| `animation-iteration-count:` | infinite / \\<number>                                   |\n| `animation-direction:`       | normal / reverse / alternate / alternate-reverse       |\n| `animation-fill-mode:`       | none / forwards / backwards / both / initial / inherit |\n| `animation-play-state:`      | normal / reverse / alternate / alternate-reverse       |\n\n{.left-text}\n\nSee also: [Animation](https://developer.mozilla.org/en-US/docs/Web/CSS/animation)\n\n### Example {.col-span-3}\n\n```css\n/* @keyframes duration | timing-function | delay |\n   iteration-count | direction | fill-mode | play-state | name */\nanimation: 3s ease-in 1s 2 reverse both paused slidein;\n\n/* @keyframes duration | timing-function | delay | name */\nanimation: 3s linear 1s slidein;\n\n/* @keyframes duration | name */\nanimation: 3s slidein;\n\nanimation: 4s linear 0s infinite alternate move_eye;\nanimation: bounce 300ms linear 0s infinite normal;\nanimation: bounce 300ms linear infinite;\nanimation: bounce 300ms linear infinite alternate-reverse;\nanimation: bounce 300ms linear 2s infinite alternate-reverse forwards normal;\n```\n\n### Javascript Event {.col-span-3}\n\n```js\n.one('webkitAnimationEnd oanimationend msAnimationEnd animationend')\n```\n\n## CSS Flexbox {.cols-2}\n\n### Simple example\n\n```css\n.container {\n  display: flex;\n}\n```\n\n```css\n.container > div {\n  flex: 1 1 auto;\n}\n```\n\n### Container {.row-span-2}\n\n.container {\n\n```css\ndisplay: flex;\ndisplay: inline-flex;\n```\n\n```css\nflex-direction: row; /* ltr - default */\nflex-direction: row-reverse; /* rtl */\nflex-direction: column; /* top-bottom */\nflex-direction: column-reverse; /* bottom-top */\n```\n\n```css\nflex-wrap: nowrap; /* one-line */\nflex-wrap: wrap; /* multi-line */\n```\n\n```css\nalign-items: flex-start; /* vertical-align to top */\nalign-items: flex-end; /* vertical-align to bottom */\nalign-items: center; /* vertical-align to center */\nalign-items: stretch; /* same height on all (default) */\n```\n\n```css\njustify-content: flex-start; /* [xxx        ] */\njustify-content: center; /* [    xxx    ] */\njustify-content: flex-end; /* [        xxx] */\njustify-content: space-between; /* [x    x    x] */\njustify-content: space-around; /* [ x   x   x ] */\njustify-content: space-evenly; /* [  x  x  x  ] */\n```\n\n}\n\n### Child\n\n.container > div {\n\n```css\n/* This: */\nflex: 1 0 auto;\n\n/* Is equivalent to this: */\nflex-grow: 1;\nflex-shrink: 0;\nflex-basis: auto;\n```\n\n```css\norder: 1;\n```\n\n```css\nalign-self: flex-start; /* left */\nmargin-left: auto; /* right */\n```\n\n}\n\n## CSS Flexbox Tricks\n\n### Vertical center\n\n```css\n.container {\n  display: flex;\n}\n\n.container > div {\n  width: 100px;\n  height: 100px;\n  margin: auto;\n}\n```\n\n### Vertical center (2)\n\n```css\n.container {\n  display: flex;\n\n  /* vertical */\n  align-items: center;\n\n  /* horizontal */\n  justify-content: center;\n}\n```\n\n### Reordering\n\n```css\n.container > .top {\n  order: 1;\n}\n\n.container > .bottom {\n  order: 2;\n}\n```\n\n### Mobile layout\n\n```css\n.container {\n  display: flex;\n  flex-direction: column;\n}\n\n.container > .top {\n  flex: 0 0 100px;\n}\n\n.container > .content {\n  flex: 1 0 auto;\n}\n```\n\nA fixed-height top bar and a dynamic-height content area.\n\n### Table-like {.col-span-2}\n\n```css\n.container {\n  display: flex;\n}\n\n/* the 'px' values here are just suggested percentages */\n.container > .checkbox {\n  flex: 1 0 20px;\n}\n.container > .subject {\n  flex: 1 0 400px;\n}\n.container > .date {\n  flex: 1 0 120px;\n}\n```\n\nThis creates columns that have different widths, but size accordingly according to the circumstances.\n\n### Vertical\n\n```css\n.container {\n  align-items: center;\n}\n```\n\nVertically-center all items.\n\n### Left and right {.col-span-2}\n\n```css\n.menu > .left {\n  align-self: flex-start;\n}\n.menu > .right {\n  align-self: flex-end;\n}\n```\n\n## CSS Grid Layout\n\n### Grid Template Columns\n\n```css\n#grid-container {\n  display: grid;\n  width: 100px;\n  grid-template-columns: 20px 20% 60%;\n}\n```\n\n### fr Relative Unit\n\n```css\n.grid {\n  display: grid;\n  width: 100px;\n  grid-template-columns: 1fr 60px 1fr;\n}\n```\n\n### Grid Gap\n\n```css\n/*The distance between rows is 20px*/\n/*The distance between columns is 10px*/\n#grid-container {\n  display: grid;\n  grid-gap: 20px 10px;\n}\n```\n\n### CSS Block Level Grid\n\n```css\n#grid-container {\n  display: block;\n}\n```\n\n### CSS grid-row\n\nCSS syntax:\n\n- grid-row: grid-row-start / grid-row-end;\n\n#### Example\n\n```css\n.item {\n  grid-row: 1 / span 2;\n}\n```\n\n### CSS Inline Level Grid\n\n```css\n#grid-container {\n  display: inline-grid;\n}\n```\n\n### minmax() Function\n\n```css {.wrap}\n.grid {\n  display: grid;\n  grid-template-columns: 100px minmax(100px, 500px) 100px;\n}\n```\n\n### grid-row-start & grid-row-end\n\nCSS syntax:\n\n- grid-row-start: auto|row-line;<br>\n- grid-row-end: auto|row-line|span n;\n\n#### Example\n\n```css\ngrid-row-start: 2;\ngrid-row-end: span 2;\n```\n\n### CSS grid-row-gap\n\n```css\ngrid-row-gap: length;\n```\n\nAny legal length value, like px or %. 0 is the default value\n\n### CSS grid-area\n\n```css\n.item1 {\n  grid-area: 2 / 1 / span 2 / span 3;\n}\n```\n\n### Justify Items\n\n```css\n#container {\n  display: grid;\n  justify-items: center;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-gap: 10px;\n}\n```\n\n### CSS grid-template-areas\n\n```css\n.item {\n  grid-area: nav;\n}\n.grid-container {\n  display: grid;\n  grid-template-areas:\n    'nav nav . .'\n    'nav nav . .';\n}\n```\n\n### Justify Self\n\n```css\n#grid-container {\n  display: grid;\n  justify-items: start;\n}\n\n.grid-items {\n  justify-self: end;\n}\n```\n\nThe grid items are positioned to the right (end) of the row.\n\n### Align Items\n\n```css\n#container {\n  display: grid;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-gap: 10px;\n}\n```\n\n## CSS Dynamic Content\n\n### Variable\n\nDefine CSS Variable\n\n```css\n:root {\n  --first-color: #16f;\n  --second-color: #ff7;\n}\n```\n\nVariable Usage\n\n```css\n#firstParagraph {\n  background-color: var(--first-color);\n  color: var(--second-color);\n}\n```\n\nSee also: [CSS Variable](https://developer.mozilla.org/en-US/docs/Web/CSS/--*)\n\n### Counter\n\n```css\n/* Set \"my-counter\" to 0 */\ncounter-set: my-counter;\n```\n\n```css\n/* Increment \"my-counter\" by 1 */\ncounter-increment: my-counter;\n```\n\n```css\n/* Decrement \"my-counter\" by 1 */\ncounter-increment: my-counter -1;\n```\n\n```css\n/* Reset \"my-counter\" to 0 */\ncounter-reset: my-counter;\n```\n\nSee also: [Counter set](https://developer.mozilla.org/en-US/docs/Web/CSS/counter-set)\n\n### Using counters\n\n```css\nbody {\n  counter-reset: section;\n}\n\nh3::before {\n  counter-increment: section;\n  content: 'Section.' counter(section);\n}\n```\n\n```css\nol {\n  counter-reset: section;\n  list-marker-type: none;\n}\n\nli::before {\n  counter-increment: section;\n  content: counters(section, '.') ' ';\n}\n```\n\n## Css 3 tricks\n\n### Scrollbar smooth\n\n```css\nhtml {\n  scroll-behavior: smooth;\n}\n```\n\n[Click me](#css-getting-started), the page will scroll smoothly to Getting started\n\n## Modern CSS\n\n### container queries(size)\n\n```css\n.element-wrap {\n  container: element / inline-size;\n}\n@container element (min-inline-size: 300px) {\n  .element {\n    display: flex;\n    gap: 1rem;\n  }\n}\n```\n\n### container qeries(style)\n\n```css\n.container {\n  --variant: 1;\n\n  &.variant2 {\n    --variant: 2;\n  }\n}\n\n@container style(--variant: 1) {\n  button {\n  } /* You can't style .container, but can select inside it */\n  .other-things {\n  }\n}\n\n@container style(--variant: 2) {\n  button {\n  }\n  .whatever {\n  }\n}\n```\n\n### container units\n\n- The units are cqw (“container query width”),\n- cqh (“container query height”),\n- cqi (“container query inline”),\n- cqb (“container query block”),\n- cqmin (smaller of cqi and cqb),\n- and cqmax (larger of cqi and cqb)\n\n```css\n.card {\n  padding: 5cqi;\n  font-size: 4cqi;\n  border: 1cqi solid brown;\n  height: 100%;\n}\n\nh2 {\n  font-size: 10cqi;\n  margin-block: 0 3cqi;\n}\n```\n\n### the :has() pseudo selector\n\n```css\nfigure:has(figcaption) {\n  border: 1px solid black;\n  padding: 0.5rem;\n}\n```\n\n### nesting\n\n```css\n.cards {\n  .card {\n    & .card-description {\n      color: blue;\n    }\n    & .card-title {\n      color: red;\n    }\n  }\n}\n```\n\n###\n\n### scoping\n\n```css\n@scope {\n  :scope {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n    padding: 1rem;\n    border: 1px solid black;\n  }\n  .card {\n    padding: 1rem;\n    border: 1px solid black;\n    background: lightgray;\n    h2 {\n      margin: 0 0 1rem 0;\n    }\n  }\n}\n```\n\n### cascade layers\n\n```css\n/* Specify the order to apply styles in cascade */\n@layer legacyCard, newCard;\n\n/* Imagine you have a lot of styles */\n@layer newCard {\n  .card {\n    background-color: red;\n  }\n}\n@layer legacyCard {\n  .card {\n    background-color: green;\n  }\n}\n```\n\n### logical properties\n\n```css\nbutton {\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  text-decoration: none;\n  font: inherit;\n  border-radius: 4px;\n  .icon {\n    position: relative;\n    top: 0.125em;\n    fill: white;\n    width: 1em;\n    aspect-ratio: 1;\n    margin-inline-end: 0.25rem;\n  }\n}\n```\n\n### p3 colors\n\n```html\n<div class=\"container\">\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-color: color(display-p3 1 0.5 0);\n        }\n      }\n    </style>\n  </div>\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-color: oklch(61.88% 0.286 342.4);\n        }\n      }\n    </style>\n  </div>\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-color: oklab(0.73 0.15 0.16);\n        }\n      }\n    </style>\n  </div>\n\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-image: linear-gradient(to right in oklch, red, blue);\n        }\n      }\n    </style>\n  </div>\n\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-image: linear-gradient(to right in oklab, red, blue);\n        }\n      }\n    </style>\n  </div>\n\n  <div class=\"swatch\">\n    <style contenteditable>\n      @scope {\n        :scope {\n          background-image: linear-gradient(to right in srgb, red, blue);\n        }\n      }\n    </style>\n  </div>\n</div>\n```\n\n### color mixing\n\n```css\n.swatch {\n  color: white;\n  width: 100px;\n  aspect-ratio: 1;\n  display: grid;\n  place-items: center;\n  text-align: center;\n\n  &:nth-child(1) {\n    background-color: var(--bg);\n  }\n  &:nth-child(2) {\n    background-color: color-mix(in oklch, var(--bg), black 30%);\n  }\n  &:nth-child(3) {\n    background-color: color-mix(in oklch, var(--bg), white 30%);\n  }\n}\n```\n\n### margin trim\n\n```css\n.container {\n  /* prevent \"extra\" margin at the end of the element */\n  margin-trim: block-end;\n\n  /* an element like this might be the culprit, but it could be anything */\n  > p {\n    margin-block-end: 1rem;\n  }\n}\n```\n\n### text wrapping\n\n```css\n.balance {\n  text-wrap: balance;\n}\n.pretty {\n  text-wrap: pretty;\n}\n\nhtml {\n  font-family: system-ui, sans-serif;\n}\n\nmain {\n  max-inline-size: 60ch;\n  margin-inline: auto;\n}\n```\n\n### subgrid\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(4, minmax(100px, auto));\n}\n\n.item {\n  display: grid;\n  grid-column: 2 / 7;\n  grid-row: 2 / 4;\n  grid-template-columns: subgrid;\n  grid-template-rows: repeat(3, 80px);\n}\n\n.subitem {\n  grid-column: 3 / 6;\n  grid-row: 1 / 3;\n}\n```\n\n## Also see {.cols-1}\n\n- [frontendmasters.com ](https://frontendmasters.com/blog/what-you-need-to-know-about-modern-css-spring-2024-edition/)\n- [CSS selectors cheatsheet](https://frontend30.com/css-selectors-cheatsheet/) _(frontend30.com)_\n- [MDN: Using CSS flexbox](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n- [Ultimate flexbox cheatsheet](http://www.sketchingwithcss.com/samplechapter/cheatsheet.html)\n- [GRID: A simple visual cheatsheet](http://grid.malven.co/)\n- [CSS Tricks: A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/)\n- [Browser support](https://caniuse.com/#feat=css-grid)\n"
}