{
  "id": "sass",
  "title": "Sass",
  "intro": "|\nThis is a quick reference cheat sheet that lists the most useful features of [SASS](https://sass-lang.com).",
  "tags": [
    "css"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#ba6993]",
  "content": "## Sass Basics\n\n### Introduction\n\n- [Documentation](https://sass-lang.com/documentation) _(sass-lang.com)_\n- [Learn X in Y minutes](https://learnxinyminutes.com/docs/sass/) _(learnxinyminutes.com)_\n\n### Variables\n\n```scss\n$defaultLinkColor: #46eac2;\n\na {\n  color: $defaultLinkColor;\n}\n```\n\n### String interpolation\n\n```scss\n$wk: -webkit-;\n\n.rounded-box {\n  #{$wk}border-radius: 4px;\n}\n```\n\n### Comments\n\n```scss\n/*\n Block comments\n Block comments\n Block comments\n*/\n\n// Line comments\n```\n\n### Mixins\n\n```scss\n@mixin heading-font {\n  font-family: sans-serif;\n  font-weight: bold;\n}\nh1 {\n  @include heading-font;\n}\n```\n\nSee: [Mixins](#sass-mixins)\n\n### Nesting {.row-span-2}\n\n```scss\n.markdown-body {\n  a {\n    color: blue;\n    &:hover {\n      color: red;\n    }\n  }\n}\n```\n\n#### to properties\n\n```scss\ntext: {\n  // like text-align: center\n  align: center;\n  // like text-transform: uppercase\n  transform: uppercase;\n}\n```\n\n### Extend\n\n```scss\n.button {\n    ···\n}\n```\n\n```scss\n.push-button {\n  @extend .button;\n}\n```\n\n### @import\n\n```scss\n@import './other_sass_file';\n@import '/code', 'lists';\n\n// Plain CSS @imports\n@import 'theme.css';\n@import url(theme);\n```\n\nThe `.sass` or `.sass` extension is optional.\n\n## Sass Mixins\n\n### Parameters\n\n```scss\n@mixin font-size($n) {\n  font-size: $n * 1.2em;\n}\n```\n\n```scss\nbody {\n  @include font-size(2);\n}\n```\n\n### Default values\n\n```scss\n@mixin pad($n: 10px) {\n  padding: $n;\n}\n```\n\n```scss\nbody {\n  @include pad(15px);\n}\n```\n\n### Default variable\n\n```scss\n$default-padding: 10px;\n\n@mixin pad($n: $default-padding) {\n  padding: $n;\n}\n\nbody {\n  @include pad(15px);\n}\n```\n\n## Sass Color functions {.cols-2}\n\n### rgba\n\n```scss\nrgb(100, 120, 140)\nrgba(100, 120, 140, .5)\nrgba($color, .5)\n```\n\n### Mixing\n\n```scss\nmix($a, $b, 10%)   // 10% a, 90% b\n```\n\n### Modifying HSLA\n\n```scss\ndarken($color, 5%)\nlighten($color, 5%)\n```\n\n```scss\nsaturate($color, 5%)\ndesaturate($color, 5%)\ngrayscale($color)\n```\n\n```scss\nadjust-hue($color, 15deg)\ncomplement($color)    // like adjust-hue(_, 180deg)\ninvert($color)\n```\n\n```scss\nfade-in($color, .5)   // aka opacify()\nfade-out($color, .5)  // aka transparentize()\nrgba($color, .5)      // sets alpha to .5\n```\n\n### Getting individual values\n\n#### HSLA\n\n```scss\nhue($color)         // 0deg..360deg\nsaturation($color)  // 0%..100%\nlightness($color)   // 0%..100%\nalpha($color)       // 0..1 (aka opacity())\n```\n\n#### RGB\n\n```scss\nred($color)         // 0..255\ngreen($color)\nblue($color)\n```\n\nSee: [hue()](http://sass-lang.com/documentation/Sass/Script/Functions.html#hue-instance_method),\n[red()](http://sass-lang.com/documentation/Sass/Script/Functions.html#red-instance_method)\n\n### Adjustments\n\n```scss\n// Changes by fixed amounts\nadjust-color($color, $blue: 5)\nadjust-color($color, $lightness: -30%) // darken(_, 30%)\nadjust-color($color, $alpha: -0.4)     // fade-out(_, .4)\nadjust-color($color, $hue: 30deg)      // adjust-hue(_, 15deg)\n```\n\n```scss\n// Changes via percentage\nscale-color($color, $lightness: 50%)\n```\n\n```scss\n// Changes one property completely\nchange-color($color, $hue: 180deg)\nchange-color($color, $blue: 250)\n```\n\nSupported: `$red`, `$green`, `$blue`, `$hue`, `$saturation`, `$lightness`, `$alpha`\n\n## Sass Other functions {.cols-2}\n\n### Strings\n\n```scss\nunquote('hello')\nquote(hello)\n```\n\n```scss\nto-upper-case(hello)\nto-lower-case(hello)\n```\n\n```scss\nstr-length(hello world)\nstr-slice(hello, 2, 5)     // \"ello\" - it's 1-based, not 0-based\nstr-insert(\"abcd\", \"X\", 1) // \"Xabcd\"\n```\n\n### Units\n\n```scss\nunit(3em)        // 'em'\nunitless(100px)  // false\n```\n\n### Numbers\n\n```scss\nfloor(3.5)\nceil(3.5)\nround(3.5)\nabs(3.5)\n```\n\n```scss\nmin(1, 2, 3)\nmax(1, 2, 3)\n```\n\n```scss\npercentage(.5)   // 50%\nrandom(3)        // 0..3\n```\n\n### Misc\n\n```scss\nvariable-exists(red)    // checks for $red\nmixin-exists(red-text)  // checks for @mixin red-text\nfunction-exists(redify)\n```\n\n```scss\nglobal-variable-exists(red)\n```\n\n```scss\nselector-append('.menu', 'li', 'a')   // .menu li a\nselector-nest('.menu', '&:hover li')  // .menu:hover li\nselector-extend(...)\nselector-parse(...)\nselector-replace(...)\nselector-unify(...)\n```\n\n## Sass Feature checks {.cols-2}\n\n### Feature check\n\n```scss\nfeature-exists(global-variable-shadowing)\n```\n\n### Features\n\n- global-variable-shadowing\n- extend-selector-pseudoclass\n- units-level-3\n- at-error\n\n## Sass Loops\n\n### For loops\n\n```scss\n@for $i from 1 through 4 {\n  .item-#{$i} {\n    left: 20px * $i;\n  }\n}\n```\n\n### Each loops (simple)\n\n```scss\n$menu-items: home about contact;\n\n@each $item in $menu-items {\n  .photo-#{$item} {\n    background: url('#{$item}.jpg');\n  }\n}\n```\n\n### Each loops (nested)\n\n```scss\n$backgrounds: (home, 'home.jpg'), (about, 'about.jpg');\n\n@each $id, $image in $backgrounds {\n  .photo-#{$id} {\n    background: url($image);\n  }\n}\n```\n\n### While loops\n\n```scss\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n```\n\n## Sass Other features\n\n### Conditionals {.row-span-2}\n\n```scss\n@if $position == 'left' {\n  position: absolute;\n  left: 0;\n} @else if $position == 'right' {\n  position: absolute;\n  right: 0;\n} @else {\n  position: static;\n}\n```\n\n### Interpolation\n\n```scss\n.#{$klass} { ... }      // Class\ncall($function-name)    // Functions\n\n@media #{$tablet}\nfont: #{$size}/#{$line-height}\nurl(\"#{$background}.jpg\")\n```\n\n### Lists\n\n```scss\n$list: (a b c);\n\nnth($list, 1)  // starts with 1\nlength($list)\n\n@each $item in $list { ... }\n```\n\n### Maps {.col-span-2}\n\n```scss\n$map: (key1: value1, key2: value2, key3: value3);\n\nmap-get($map, key1)\n```\n"
}