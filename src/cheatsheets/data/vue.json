{
  "id": "vue",
  "title": "Vue",
  "intro": "|\nA Vue 3 cheat sheet with the most important concepts, reactivity, component system, routing, and more. Updated for the latest version and perfect for both beginners and advanced users.",
  "tags": [
    "vue",
    "web"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#43CF96]",
  "content": "## 📘 Vue.js 3 Cheatsheet – Beginner to Advanced\n\n> The ultimate reference for mastering Vue 3.\n\n\n## ⚙️ 1. Setup\n\n### CDN (Quick Start)\n\n```html\n<script src=\"https://unpkg.com/vue@3\"></script>\n<div id=\"app\">{{ message }}</div>\n<script>\n  Vue.createApp({\n    data() {\n      return { message: \"Hello Vue!\" };\n    }\n  }).mount(\"#app\");\n</script>\n```\n### Vite + Vue\n\n```bash\nnpm create vite@latest my-vue-app --template vue\ncd my-vue-app\nnpm install\nnpm run dev\n```\n\n\n## 🧠 2. App Structure\n\n```\nsrc/\n├─ components/\n├─ views/\n├─ App.vue\n├─ main.js\n```\n\n\n## 📦 3. Data, Methods, Template\n\n```js\ndata() {\n  return {\n    count: 0,\n    message: \"Welcome!\"\n  };\n},\nmethods: {\n  increment() {\n    this.count++;\n  }\n}\n```\n\n```html\n<h1>{{ message }}</h1>\n<button @click=\"increment\">+</button>\n```\n\n\n## 🧰 4. Directives\n\n| Directive       | Purpose                 |\n| --------------- | ----------------------- |\n| `v-bind` / `:`  | Bind attributes         |\n| `v-model`       | Two-way binding         |\n| `v-if / v-else` | Conditional rendering   |\n| `v-show`        | Toggle visibility       |\n| `v-for`         | List rendering          |\n| `v-on` / `@`    | Event handling          |\n| `v-slot`        | Named/Scoped slot usage |\n\n### Example\n\n```html\n<input v-model=\"name\" />\n<p v-if=\"name\">Hi, {{ name }}!</p>\n<ul>\n  <li v-for=\"item in list\" :key=\"item.id\">{{ item }}</li>\n</ul>\n```\n\n\n## 🪝 5. Lifecycle Hooks\n\n```js\ncreated() {},\nmounted() {},\nupdated() {},\nunmounted() {}\n```\n\n\n## 🎯 6. Events\n\n```html\n<button @click=\"sayHi\">Click</button>\n<input @keyup.enter=\"submit\" />\n```\n\n\n## 🔁 7. Computed & Watch\n\n```js\ncomputed: {\n  reversed() {\n    return this.message.split('').reverse().join('');\n  }\n},\nwatch: {\n  count(newVal, oldVal) {\n    console.log(`Count changed from ${oldVal} to ${newVal}`);\n  }\n}\n```\n\n\n## 🧱 8. Components\n\n### Register + Use\n\n```js\napp.component(\"Greeting\", {\n  props: [\"name\"],\n  template: `<h1>Hello, {{ name }}!</h1>`\n});\n```\n\n```html\n<Greeting name=\"Sumangal\" />\n```\n\n\n## 🔗 9. Props & Emits\n\n### Props\n\n```js\nprops: {\n  title: String,\n  age: {\n    type: Number,\n    default: 18\n  }\n}\n```\n\n### Emit\n\n```js\nthis.$emit(\"custom-event\", payload);\n```\n\n\n## 🔄 10. v-model with Components\n\n```js\nprops: ['modelValue'],\nemits: ['update:modelValue']\n```\n\n```html\n<input\n  :value=\"modelValue\"\n  @input=\"$emit('update:modelValue', $event.target.value)\"\n/>\n```\n\n\n## ⚒ 11. Composition API\n\n```js\nimport { ref, computed } from \"vue\";\n\nexport default {\n  setup() {\n    const count = ref(0);\n    const double = computed(() => count.value * 2);\n\n    const increment = () => count.value++;\n\n    return { count, double, increment };\n  }\n};\n```\n\n\n## 🌐 12. Vue Router\n\n```bash\nnpm install vue-router\n```\n\n### router.js\n\n```js\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport Home from \"./views/Home.vue\";\nimport About from \"./views/About.vue\";\n\nconst routes = [\n  { path: \"/\", component: Home },\n  { path: \"/about\", component: About }\n];\n\nexport default createRouter({\n  history: createWebHistory(),\n  routes\n});\n```\n\n### main.js\n\n```js\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\nconst app = createApp(App);\napp.use(router).mount(\"#app\");\n```\n\n\n## 📦 13. Pinia (Vuex Alternative)\n\n```bash\nnpm install pinia\n```\n\n### store/counter.js\n\n```js\nimport { defineStore } from \"pinia\";\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({ count: 0 }),\n  actions: {\n    increment() {\n      this.count++;\n    }\n  }\n});\n```\n\n```js\nconst counter = useCounterStore();\ncounter.increment();\n```\n\n\n## 🎨 14. Slots\n\n```html\n<!-- Default -->\n<slot></slot>\n\n<!-- Named -->\n<slot name=\"header\"></slot>\n\n<!-- Scoped -->\n<slot :user=\"user\"></slot>\n```\n\n\n## 🧪 15. Testing\n\n### Vitest + Vue Test Utils\n\n```bash\nnpm install vitest @vue/test-utils\n```\n\n```js\nimport { mount } from \"@vue/test-utils\";\nimport MyComponent from \"@/components/MyComponent.vue\";\n\ntest(\"renders\", () => {\n  const wrapper = mount(MyComponent);\n  expect(wrapper.text()).toContain(\"Hello\");\n});\n```\n\n\n## 🧼 16. Best Practices\n\n* Use `ref()` for primitives, `reactive()` for objects\n* Use `<script setup>` syntax in SFCs\n* Break UI into small, reusable components\n* Always define `key` in `v-for`\n* Use slots for flexible composition\n\n\n## 🛠 17. Dev Tools\n\n* 🧩 [Vue DevTools](https://devtools.vuejs.org/)\n* 🧠 [Volar](https://github.com/vuejs/language-tools) for VSCode\n* ⚡ [Vite](https://vitejs.dev) for fast dev environment\n\n\n## 📚 18. Official Resources\n\n* 📘 [Vue Docs](https://vuejs.org)\n* 🧭 [Router Docs](https://router.vuejs.org)\n* 📦 [Pinia Docs](https://pinia.vuejs.org)\n* 🧪 [Composition API FAQ](https://vuejs.org/guide/extras/composition-api-faq.html)\n\n"
}