{
  "id": "kubernetes",
  "title": "Kubernetes",
  "intro": "|\nThis page contains a list of commonly used kubectl commands and flags.",
  "tags": [
    "config",
    "format"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#416cde]",
  "content": "## Viewing and finding resources {.cols-2}\n\n### Nodes\n\n```bash\nkubectl get no # Display all node information\nkubectl get no -o wide # Show more information about all nodes\nkubectl describe no # Display node details\nkubectl get no -o yaml # Display node details in yaml format\nkubectl get node --selector=[label_name] # Filter the node with the specified label\nkubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type=\"ExternalIP\")].address}'\n# Output the field information defined by the jsonpath expression\nkubectl top node [node_name] # Display node (CPU/memory/storage) usage\n```\n\nResource name: nodes, abbreviation: no\n\n### Pods\n\n```bash\nkubectl get po # Display all container group information\nkubectl get po -o wide\nkubectl describe po\nkubectl get po --show-labels # View the labels of the container group\nkubectl get po -l app=nginx\nkubectl get po -o yaml\nkubectl get pod [pod_name] -o yaml --export\nkubectl get pod [pod_name] -o yaml --export > nameoffile.yaml\n# Export container group information to yaml file in yaml format\nkubectl get pods --field-selector status.phase=Running\n# Use the field selector to filter out container group information\n```\n\nResource name: pods, abbreviation: po\n\n### Namespaces\n\n```bash\nkubectl get ns\nkubectl get ns -o yaml\nkubectl describe ns\n```\n\nResource name: namespaces, abbreviation: ns\n\n### Deployments\n\n```bash\nkubectl get deploy\nkubectl describe deploy\nkubectl get deploy -o wide\nkubectl get deploy -o yaml\n```\n\nResource name: deployments, abbreviation: deploy\n\n### Services\n\n```bash\nkubectl get svc\nkubectl describe svc\nkubectl get svc -o wide\nkubectl get svc -o yaml\nkubectl get svc --show-labels\n```\n\nResource name: services, abbreviation: svc\n\n### Daemon Sets\n\n```bash\nkubectl get ds\nkubectl describe ds --all-namespaces\nkubectl describe ds [daemonset_name] -n [namespace_name]\nkubectl get ds [ds_name] -n [ns_name] -o yaml\n```\n\nResource name: daemonsets, abbreviation: ds\n\n### Events\n\n```bash\nkubectl get events\nkubectl get events -n kube-system\nkubectl get events -w\n```\n\nResource name: events, abbreviation: ev\n\n### Logs\n\n```bash\nkubectl logs [pod_name]\nkubectl logs --since=1h [pod_name]\nkubectl logs --tail=20 [pod_name]\nkubectl logs -f -c [container_name] [pod_name]\nkubectl logs [pod_name] > pod.log\n```\n\n### Service Accounts\n\n```bash\nkubectl get sa\nkubectl get sa -o yaml\nkubectl get serviceaccounts default -o yaml >./sa.yaml\nkubectl replace serviceaccount default -f ./sa.yaml\n```\n\nResource name: serviceaccounts, abbreviation: ev\n\n### Replica Sets\n\n```bash\nkubectl get rs\nkubectl describe rs\nkubectl get rs -o wide\nkubectl get rs -o yaml\n```\n\nResource name: replicasets, abbreviation: rs\n\n### Roles\n\n```bash\nkubectl get roles --all-namespaces\nkubectl get roles --all-namespaces -o yaml\n```\n\n### Secrets\n\n```bash\nkubectl get secrets\nkubectl get secrets --all-namespaces\nkubectl get secrets -o yaml\n```\n\n### Config maps\n\nResource name: configmaps, abbreviation: cm\n\n```bash\nkubectl get cm\nkubectl get cm --all-namespaces\nkubectl get cm --all-namespaces -o yaml\n```\n\n### Ingresses\n\nResource name: ingresses, abbreviation: ing\n\n```bash\nkubectl get ing\nkubectl get ing --all-namespaces\n```\n\n### Persistent Volumes\n\nResource name: persistentvolumes, abbreviation: pv\n\n```bash\nkubectl get pv\nkubectl describe pv\n```\n\n### Persistent volume declaration\n\nResource name: persistentvolumeclaims, abbreviation: pvc\n\n```bash\nkubectl get pvc\nkubectl describe pvc\n```\n\n### storage class\n\nResource name: storageclasses, Abbreviation: sc\n\n```bash\nkubectl get sc\nkubectl get sc -o yaml\n```\n\n### Multiple resources\n\n```bash\nkubectl get svc, po\nkubectl get deploy, no\nkubectl get all\nkubectl get all --all-namespaces\n```\n\n## Updating resources\n\n### Taint\n\n```bash\nkubectl taint [node_name] [taint_name]\n```\n\n### Label\n\n```bash\nkubectl label [node_name] disktype=ssd\nkubectl label [pod_name] env=prod\n```\n\n### Maintain/Schedulable\n\n```bash\nkubectl cordon [node_name] # node maintenance\nkubectl uncordon [node_name] # node is schedulable\n```\n\n### clear\n\n```bash\nkubectl drain [node_name] # empty the node\n```\n\n### Node/Pod {.row-span-2}\n\n```bash\nkubectl delete node [node_name]\nkubectl delete pod [pod_name]\nkubectl edit node [node_name]\nkubectl edit pod [pod_name]\n```\n\n### Stateless/Namespaced {.row-span-2}\n\n```bash\nkubectl edit deploy [deploy_name]\nkubectl delete deploy [deploy_name]\nkubectl expose deploy [deploy_name] --port=80 --type=NodePort\nkubectl scale deploy [deploy_name] --replicas=5\nkubectl delete ns\nkubectl edit ns [ns_name]\n```\n\n### Service\n\n```bash\nkubectl edit svc [svc_name]\nkubectl delete svc [svc_name]\n```\n\n### Daemon set\n\n```bash\nkubectl edit ds [ds_name] -n kube-system\nkubectl delete ds [ds_name]\n```\n\n### Service account\n\n```bash\nkubectl edit sa [sa_name]\nkubectl delete sa [sa_name]\n```\n\n### Notes\n\n```bash\nkubectl annotate po [pod_name] [annotation]\nkubectl annotateno [node_name]\n```\n\n## Create resources\n\n### Create pod\n\n```bash\nkubectl create -f [name_of_file]\nkubectl apply -f [name_of_file]\nkubectl run [pod_name] --image=nginx --restart=Never\nkubectl run [pod_name] --generator=run-pod/v1 --image=nginx\nkubectl run [pod_name] --image=nginx --restart=Never\n```\n\n### Create Service\n\n```bash\nkubectl create svc nodeport [svc_name] --tcp=8080:80\n```\n\n### Create a stateless application\n\n```bash\nkubectl create -f [name_of_file]\nkubectl apply -f [name_of_file]\nkubectl create deploy [deploy_name] --image=nginx\n```\n\n### interaction\n\n```bash\nkubectl run [pod_name] --image=busybox --rm -it --restart=Never --sh\n```\n\n### Output YAML\n\n```bash\nkubectl create deploy [deploy_name] --image=nginx --dry-run -o yaml > deploy.yaml\nkubectl get po [pod_name] -o yaml --export > pod.yaml\n```\n\n### Help\n\n```bash\nkubectl -h\nkubectl create -h\nkubectl run -h\nkubectl explain deploy.spec\n```\n\n## Miscellaneous\n\n### APIs\n\n```bash\nkubectl get --raw /apis/metrics.k8s.io/\n```\n\n### Information\n\n```bash\nkubectl config\nkubectl cluster-info\nkubectl get componentstatus\n```\n\n## Also See\n\n- [Kubernetes Official Documentation](https://kubernetes.io/zh-cn/docs/reference/kubectl/) _(kubernetes.io)_\n"
}