{
  "id": "selenium",
  "title": "Selenium",
  "intro": "|\nThis cheat sheet is a crash course for Selenium beginners and help to get the idea about the basic concepts of Selenium.",
  "tags": [
    "automation",
    "testing"
  ],
  "categories": [
    "Programming"
  ],
  "background": "bg-[#62ae41]",
  "content": "## Getting Started\n\n### Initialize Browser Drivers {.row-span-2}\n\n| Browser   | Syntax                                  |\n| --------- | --------------------------------------- |\n| `Chrome`  | WebDriver driver = new ChromeDriver();  |\n| `Edge`    | WebDriver driver = new EdgeDriver();    |\n| `Firefox` | WebDriver driver = new FirefoxDriver(); |\n| `Safari`  | WebDriver driver = new SafariDriver();  |\n\n{.show-header .left-text}\n\n### Selenium Locators {.col-span-2}\n\n| Locator           | Syntax                                        |\n| ----------------- | --------------------------------------------- |\n| `className`       | driver.findElement(By.className (“key”))      |\n| `cssSelector`     | driver.findElement(By.cssSelector(key\"))      |\n| `id `             | driver.findElement(By.id(key\"))               |\n| `linkText`        | driver.findElement(By.linkText(key\"))         |\n| `name`            | driver.findElement(By.name(“key\"))            |\n| `partialLinkText` | driver.findElement(By.partialLinkText(“key\")) |\n| `tagName `        | driver.findElement(By.tagName (“key”))        |\n| `xpath`           | driver.findElement(By.xpath(“key\"))           |\n\n{.show-header .left-text}\n\n### Navigate to URL\n\n```shell script\ndriver.get(\"https://www.example.com\");\n```\n\n### Close all browser windows\n\n```shell script\ndriver.quit();\n```\n\n### Close the current browser window\n\n```shell script\ndriver.close();\n```\n\n### Navigation {.col-span-2}\n\n| Description                     | Syntax                                           |\n| ------------------------------- | ------------------------------------------------ |\n| `Navigate to a new URL`         | driver.navigate().to(\"https://www.newsite.com\"); |\n| `Go forward to the next page`   | driver.navigate().forward();                     |\n| `Go back to the previous page ` | driver.navigate().back();                        |\n| `Refresh the current page`      | driver.navigate().refresh();                     |\n\n{.show-header .left-text}\n\n### Frame Handling {.col-span-2}\n\n| Description                       | Syntax                              |\n| --------------------------------- | ----------------------------------- |\n| `Switch to a frame`               | driver.switchTo().frame(\"frameId\"); |\n| `Switch back to the main content` | driver.switchTo().defaultContent(); |\n\n{.show-header .left-text}\n\n### Alerts/Pop-Ups\n\n```shell script\nAlert alert = driver.switchTo().alert();\n\n// Used to click on the ‘OK’ button of the alert.\nalert.accept();\n\n// Used when the ‘Cancel’ button is clicked in the alert box.\nalert.dismiss();\n\n// Used to send text to an alert\nalert.sendKeys(\"text\");\n\n// Used to capture the alert message.\nalert().getText();\n\n```\n\n### Mouse and Keyboard Actions {.col-span-2}\n\n```shell script\nActions actions = new Actions(driver);\n\n// Shifts the mouse pointer to the center of the element and click on it\nactions.moveToElement(element).click().build().perform();\n\n// Performs double click on the element\nactions.doubleClick(element).perform();\n\n// Drags the element from one point and drops to another\nactions.dragAndDrop(source, target).perform();\n\n// Sends a series of keys to the element\nactions.sendKeys(element, \"text\").perform();\n\n```\n\n### Page Information {.col-span-1}\n\n```shell script\n// Get the page title\ndriver.getTitle();\n\n// Get the current page URL\ndriver.getCurrentUrl();\n\n// Get the entire page source code\ndriver.getPageSource();\n\n```\n\n### Waits {.col-span-3}\n\n```shell script\n// Explicit Wait :- These are conditional waits can be applied to satisfy a particular condition\nWebDriverWait wait = new WebDriverWait(driver, 10);\nwait.until(ExpectedConditions.elementToBeClickable(element));\n```\n\n```shell script\n// Implicit Wait :- Once the command is run, Implicit Wait remains for the entire duration for which the browser is open.\ndriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n```\n\n```shell script\n// Fluent Wait :- Fluent Wait in Selenium marks the maximum amount of time for Selenium WebDriver to wait for a certain condition (web element) becomes visible. It also defines how frequently WebDriver will check if the condition appears before throwing the “ElementNotVisibleException”.\nFluentWait wait = new FluentWait(driver);\n//Specify the timeout of the wait\nwait.withTimeout(5000, TimeUnit.MILLISECONDS);\n//Specify polling time\nwait.pollingEvery(250, TimeUnit.MILLISECONDS);\n//Specify what exceptions to ignore\nwait.ignoring(NoSuchElementException.class)\n//This is how we specify the condition to wait on.\nwait.until(ExpectedConditions.alertIsPresent());\n```\n"
}