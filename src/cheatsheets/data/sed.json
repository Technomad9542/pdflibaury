{
  "id": "sed",
  "title": "Sed",
  "intro": "|\n[Sed](https://www.gnu.org/software/sed/manual/sed.html) is a stream editor, this sed cheat sheet contains sed commands and some common sed tricks.",
  "tags": [
    "editor",
    "replace",
    "text",
    "utility"
  ],
  "categories": [
    "Linux Command"
  ],
  "background": "bg-red-400",
  "content": "## Getting Started\n\n### Sed Usage\n\nSyntax\n\n```shell script\n$ sed [options] command [input-file]\n```\n\nWith pipeline\n\n```shell script\n$ cat report.txt | sed 's/Nick/John/g'\n```\n\n```shell script\n$ echo '123abc' | sed 's/[0-9]+//g'\n```\n\n### Option Examples {.col-span-2}\n\n| Option | Example                                    | Description                             |\n| ------ | ------------------------------------------ | --------------------------------------- |\n| `-i`   | sed -ibak 's/On/Off/' php.ini              | Backup and modify input file directly   |\n| `-E`   | sed -E 's/[0-9]+//g' input-file            | Use extended regular expressions        |\n| `-n`   | sed -n '3 p' config.conf                   | Suppress default pattern space printing |\n| `-f`   | sed -f script.sed config.conf              | Execute sed script file                 |\n| `-e`   | sed -e 'command1' -e 'command2' input-file | Execute multiple sed commands           |\n\n{.show-header}\n\n### Multiple commands\n\n```shell script {.wrap}\n$ echo \"hello world\" | sed -e 's/h/H/g' -e 's/w/W/g'\nHello World\n```\n\nUse `-e` to execute multiple sed commands\n\n### Sed script\n\n```shell script\n$ echo 's/h/H/g' >> hello.sed\n$ echo 's/w/W/g' >> hello.sed\n$ echo \"hello world\" | sed -f hello.sed\nHello World\n```\n\nUse `-f` to execute sed script file\n\n### Examples\n\n```shell script\n$ sed 's/old/new/g' file.txt\n$ sed 's/old/new/g' file.txt > new.txt\n\n$ sed 's/old/new/g' -i file.txt\n$ sed 's/old/new/g' -i.backup file.txt\n```\n\nSee: [Sed examples](#sed-examples)\n\n## Sed commands\n\n### Commands {.col-span-2}\n\n| Command | Example                                | Description                 |\n| ------- | -------------------------------------- | --------------------------- |\n| `p`     | sed -n '1,4 p' input.txt               | Print lines 1-4             |\n| `p`     | sed -n -e '1,4 p' -e '6,7 p' input.txt | Print lines 1-4 and 6-7     |\n| `d`     | sed '1,4 d' input.txt                  | Print lines except 1-4      |\n| `w`     | sed -n '1,4 w output.txt' input.txt    | Write pattern space to file |\n| `a`     | sed '2 a new-line' input.txt           | Append line after           |\n| `i`     | sed '2 i new-line' input.txt           | Insert line before          |\n\n{.show-header}\n\n### Space commands\n\n| Command | Description                                                  |\n| ------- | ------------------------------------------------------------ |\n| `n`     | Print pattern space, empty pattern space, and read next line |\n| `x`     | Swap pattern space with hold space                           |\n| `h`     | Copy pattern space to hold space                             |\n| `H`     | Append pattern space to hold space                           |\n| `g`     | Copy hold space to pattern space                             |\n| `G`     | Append hold space to pattern space                           |\n\nSee also: [File spacing](#file-spacing)\n\n### Flags\n\n```shell script\n$ sed 's/old/new/[flags]' [input-file]\n```\n\n---\n\n| Flag     | Description                                |\n| -------- | ------------------------------------------ |\n| `g`      | Global substitution                        |\n| `1,2...` | Substitute the nth occurrence              |\n| `p`      | Print only the substituted line            |\n| `w`      | Write only the substituted line to a file  |\n| `I`      | Ignore case while searching                |\n| `e`      | Substitute and execute in the command line |\n\n### Loops commands\n\n| Command   | Description                                                        |\n| --------- | ------------------------------------------------------------------ |\n| `b label` | Branch to a label (for looping)                                    |\n| `t label` | Branch to a label only on successful substitution<br>(for looping) |\n| `:label`  | Label for the b and t commands (for looping)                       |\n| `N`       | Append next line to pattern space                                  |\n| `P`       | Print 1st line in multi-line                                       |\n| `D`       | Delete 1st line in multi-line                                      |\n\n### Misc Flags\n\n| Flag                      | Description                                                                  |\n| ------------------------- | ---------------------------------------------------------------------------- |\n| <code>/ \\| ^ @ ! #</code> | Substitution delimiter can be any character                                  |\n| `&`                       | Gets the matched pattern                                                     |\n| `( ) \\1 \\2 \\3`            | Group using `(` and `)`.<br>Use `\\1`, `\\2` in replacement to refer the group |\n\n## Sed examples\n\n### Replacing text {.row-span-2}\n\nReplace all occurrences of a string\n\n```shell script\n$ sed 's/old/new/g' file.txt\n```\n\nReplace only the nth occurrence of a string\n\n```shell script\n$ sed 's/old/new/2' file.txt\n```\n\nReplace a string only on the 5th line\n\n```shell script\n$ sed '5 s/old/new/' file.txt\n```\n\nReplace \"world\" with \"universe\" but only if the line begins with \"hello\"\n\n```shell script\n$ sed '/hello/s/world/universe/' file.txt\n```\n\nRemove \"\\\" from the end of each line\n\n```shell script\n$ sed 's/\\\\$//' file.txt\n```\n\nRemove all whitespace from beginning of each line\n\n```shell script\n$ sed 's/^\\s*//' file.txt\n```\n\nRemove comments. Even those that are at the end of a line\n\n```shell script\n$ sed 's/#.*$//' file.txt\n```\n\n### Search for text\n\nSearch for a string and only print the lines that were matched\n\n```shell script\n$ sed -n '/hello/p' file.txt\n```\n\nCase insensitive search\n\n```shell script\n$ sed -n '/hello/Ip' file.txt\n```\n\nSearch for a string but only output lines that do not match\n\n```shell script\n$ sed -n '/hello/!p' file.txt\n```\n\n### Appending lines\n\nAppend line after line 2\n\n```shell script\n$ sed '2a Text after line 2' file.txt\n```\n\nAppend line at the end of the file\n\n```shell script\n$ sed '$a THE END!' file.txt\n```\n\nAppend line after every 3rd line starting from line 3\n\n```shell script\n$ sed '3~3a Some text' file.txt\n```\n\n### Numbering {.col-span-2}\n\nNumber line of a file (simple left alignment)\n\n```shell script\n$ sed = file.txt | sed 'N;s/\\n/\\t/'\n```\n\nNumber line of a file (number on left, right-aligned)\n\n```shell script\n$ sed = file.txt | sed 'N; s/^/   /; s/ *\\(.\\{6,\\}\\)\\n/\\1  /'\n```\n\nNumber line of file, but only print numbers if line is not blank\n\n```shell script\n$ sed '/./=' file.txt | sed '/./N; s/\\n/ /'\n```\n\nCount lines (emulates \"wc -l\")\n\n```shell script\n$ sed -n '$='\n```\n\n### Prepending lines\n\nInsert text before line 5\n\n```shell script\n$ sed '5i line number five' file.txt\n```\n\nInsert \"Example: \" before each line that contains \"hello\"\n\n```shell script\n$ sed '/hello/i Example: ' file.txt\n```\n\n### Deleting lines\n\nDelete line 5-7 in file\n\n```shell script\n$ sed '5,7d' file.txt\n```\n\nDelete every 2nd line starting with line 3\n\n```shell script\n$ sed '3~2d' file.txt\n```\n\nDelete the last line in file\n\n```shell script\n$ sed '$d' file.txt\n```\n\nDelete lines starting with \"Hello\"\n\n```shell script\n$ sed '/^Hello/d' file.txt\n```\n\nDelete all empty lines\n\n```shell script\n$ sed '/^$/d' file.txt\n```\n\nDelete lines starting with \"#\"\n\n```shell script\n$ sed '/^#/d' file.txt\n```\n\n### File spacing\n\nDouble space\n\n```shell script\n$ sed G\n```\n\nDelete all blank lines and double space\n\n```shell script\n$ sed '/^$/d;G'\n```\n\nTriple space a file\n\n```shell script\n$ sed 'G;G'\n```\n\nUndo double-spacing\n\n```shell script\n$ sed 'n;d'\n```\n\nInsert a blank line above line which matches \"regex\"\n\n```shell script\n$ sed '/regex/{x;p;x;}'\n```\n\nInsert a blank line below line which matches \"regex\"\n\n```shell script\n$ sed '/regex/G'\n```\n\nInsert a blank line around line which matches \"regex\"\n\n```shell script\n$ sed '/regex/{x;p;x;G;}'\n```\n\n## Also see {.cols-1}\n\n- [sed cheatsheet](https://gist.github.com/ssstonebraker/6140154) _(gist.github.com)_\n"
}