{
  "id": "nginx",
  "title": "Nginx",
  "intro": "nginx quick reference cheat sheet",
  "tags": [],
  "categories": [
    "Linux Command"
  ],
  "background": "bg-slate-600",
  "content": "## Getting Started {.cols-3}\n\n### Install & Service\n\n- **Ubuntu/Debian**\n  ```shell script\n  $ sudo apt update && sudo apt install -y nginx\n  ```\n- **RHEL/CentOS**\n  ```shell script\n  $ sudo yum install -y epel-release nginx && sudo systemctl enable --now nginx\n  ```\n- **Service**\n  ```shell script\n  $ sudo systemctl status nginx\n  $ sudo systemctl reload nginx\n  $ sudo systemctl restart nginx\n  $ sudo nginx -t   # test config\n  $ nginx -V        # built modules\n  ```\n\n### Key Paths\n\n- `/etc/nginx/nginx.conf` _(main config)_\n- `/etc/nginx/conf.d/*.conf` _(drop‑ins)_\n- `/etc/nginx/sites-available/` + `sites-enabled/` _(Debian style)_\n- `/var/www/html` _(default docroot)_\n- `logs`: `/var/log/nginx/access.log`, `/var/log/nginx/error.log`\n\n### Minimal HTTP Server\n\n```nginx\n# /etc/nginx/conf.d/example.conf\nserver {\n  listen 80;\n  server_name example.com;\n  root /var/www/example/public;\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n}\n```\n\n## Config Structure {.cols-3}\n\n### Core Blocks\n\n- `main` (global)\n- `events` (worker connections)\n- `http` → `server` → `location`\n- `stream` (TCP/UDP)\n- `upstream` (load balancers)\n\n```nginx\nuser  www-data;\nworker_processes auto;\n\nevents { worker_connections 1024; }\n\nhttp {\n  include       mime.types;\n  default_type  application/octet-stream;\n  sendfile      on;\n  keepalive_timeout 65;\n\n  # servers / includes go here...\n}\n```\n\n### Context & Order\n\n- **`location` match order**:\n  1. Exact `=`\n  2. `^~` (no regex if matched)\n  3. Regex `~` / `~*` (first match)\n  4. Prefix (longest path)\n- `try_files` evaluates in order then falls back.\n\n```nginx\nlocation = /healthz { return 204; }\nlocation ^~ /static/ { expires 7d; }\nlocation ~* \\.(png|jpg|css|js)$ { expires 7d; }\nlocation / { try_files $uri $uri/ /index.html; }\n```\n\n### Common Includes\n\n```nginx\nhttp {\n  include /etc/nginx/conf.d/*.conf;\n  include /etc/nginx/snippets/*.conf; # Ubuntu/Debian\n}\n```\n\n## Virtual Hosts & Redirects {.cols-3}\n\n### Basic Server Block\n\n```nginx\nserver {\n  listen 80;\n  server_name example.com www.example.com;\n  root /var/www/example/public;\n  index index.html index.htm;\n}\n```\n\n### Redirect HTTP→HTTPS\n\n```nginx\nserver {\n  listen 80;\n  server_name example.com www.example.com;\n  return 301 https://example.com$request_uri;\n}\n```\n\n### Canonical Host\n\n```nginx\n# Force non-www\nserver {\n  listen 80;\n  server_name www.example.com;\n  return 301 $scheme://example.com$request_uri;\n}\n```\n\n## TLS/SSL {.cols-3}\n\n### Basic TLS Server\n\n```nginx\nserver {\n  listen 443 ssl http2;\n  server_name example.com;\n\n  ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;\n  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n\n  ssl_protocols TLSv1.2 TLSv1.3;\n  ssl_prefer_server_ciphers off;\n\n  root /var/www/example/public;\n}\n```\n\n### HSTS & Security Headers\n\n```nginx\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header Referrer-Policy \"no-referrer-when-downgrade\" always;\nadd_header Permissions-Policy \"geolocation=(), microphone=(), camera=()\" always;\n```\n\n### Let’s Encrypt (Certbot)\n\n```shell script\n$ sudo apt install -y certbot python3-certbot-nginx\n$ sudo certbot --nginx -d example.com -d www.example.com\n$ sudo systemctl list-timers | grep certbot   # auto-renew\n```\n\n## Reverse Proxy {.cols-3}\n\n### Basic Proxy\n\n```nginx\nupstream app {\n  server 127.0.0.1:3000;\n  # server unix:/run/app.sock; # alternative\n}\n\nserver {\n  listen 80;\n  server_name api.example.com;\n\n  location / {\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_pass http://app;\n  }\n}\n```\n\n### WebSockets / HTTP Upgrade\n\n```nginx\nlocation /socket.io/ {\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection \"upgrade\";\n  proxy_pass http://app;\n}\n```\n\n### Timeouts & Buffers\n\n```nginx\nproxy_connect_timeout 5s;\nproxy_send_timeout    60s;\nproxy_read_timeout    60s;\nproxy_buffering       on;\nproxy_buffers 16 16k;\nproxy_busy_buffers_size 24k;\n```\n\n## Static, Compression, Caching {.cols-3}\n\n### Static Files\n\n```nginx\nlocation /assets/ {\n  alias /var/www/example/assets/;\n  access_log off;\n  expires 7d;\n  add_header Cache-Control \"public, max-age=604800, immutable\";\n}\n```\n\n### Gzip\n\n```nginx\ngzip on;\ngzip_types text/plain text/css application/javascript application/json image/svg+xml;\ngzip_min_length 1024;\ngzip_comp_level 5;\n```\n\n### (Optional) Brotli (if compiled)\n\n```nginx\nbrotli on;\nbrotli_comp_level 5;\nbrotli_types text/plain text/css application/javascript application/json image/svg+xml;\n```\n\n## Caching & Microcaching {.cols-3}\n\n### Proxy Cache Zone\n\n```nginx\nproxy_cache_path /var/cache/nginx levels=1:2 keys_zone=micro:10m max_size=1g inactive=10m use_temp_path=off;\nmap $request_method $no_cache { default 0; POST 1; PUT 1; PATCH 1; DELETE 1; }\n```\n\n### Use the Cache\n\n```nginx\nlocation /api/ {\n  proxy_cache micro;\n  proxy_cache_bypass $no_cache;\n  proxy_no_cache $no_cache;\n  proxy_cache_valid 200 301 302 10s;\n  proxy_cache_valid any 1s;\n  add_header X-Cache-Status $upstream_cache_status;\n  proxy_pass http://app;\n}\n```\n\n### Conditional Bypass\n\n```nginx\n# Skip cache when logged in (example cookie)\nmap $http_cookie $logged_in {\n  default 0;\n  ~*\"(session|auth|logged_in)\" 1;\n}\nproxy_cache_bypass $logged_in;\nproxy_no_cache $logged_in;\n```\n\n## PHP‑FPM / FastCGI {.cols-3}\n\n### Basic PHP Handler\n\n```nginx\nlocation ~ \\.php$ {\n  include fastcgi_params;\n  fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n  fastcgi_param DOCUMENT_ROOT $realpath_root;\n  fastcgi_pass unix:/run/php/php8.2-fpm.sock;\n  fastcgi_buffers 16 16k;\n  fastcgi_read_timeout 60s;\n}\n```\n\n### try_files Front Controller\n\n```nginx\nlocation / {\n  try_files $uri $uri/ /index.php?$args;\n}\n```\n\n### Security Tips\n\n```nginx\nlocation ~* \\.(?:ini|log|sh|sql|bak)$ { deny all; }\nlocation ~ /\\.(?!well-known) { deny all; }\n```\n\n## Rewrites & Routing {.cols-3}\n\n### try_files\n\n```nginx\nlocation / {\n  try_files $uri $uri/ /index.html;\n}\n```\n\n### Regex Rewrites\n\n```nginx\n# Remove trailing slash (except root)\nif ($request_uri ~* \"^(.+)/+$\") { return 301 $1; }\n\n# Legacy path to new path\nrewrite ^/old/(.*)$ /new/$1 permanent;\n```\n\n### SPA / History API\n\n```nginx\nlocation / {\n  try_files $uri /index.html;\n}\n```\n\n## Rate Limiting & DoS Mitigation {.cols-3}\n\n### Request Rate\n\n```nginx\n# 10 req/s with burst 20 per IP\nlimit_req_zone $binary_remote_addr zone=reqs:10m rate=10r/s;\n\nserver {\n  location /api/ {\n    limit_req zone=reqs burst=20 nodelay;\n  }\n}\n```\n\n### Concurrent Connections\n\n```nginx\nlimit_conn_zone $binary_remote_addr zone=conns:10m;\nserver {\n  location /download/ {\n    limit_conn conns 10;\n  }\n}\n```\n\n### Body Size & Timeouts\n\n```nginx\nclient_max_body_size 25m;\nclient_body_timeout 30s;\nkeepalive_timeout 65s;\n```\n\n## Security Headers & Access {.cols-3}\n\n### Basic Hardening\n\n```nginx\nserver_tokens off;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header Referrer-Policy \"no-referrer-when-downgrade\" always;\n```\n\n### Allow/Deny\n\n```nginx\nlocation /admin/ {\n  allow 192.168.0.0/16;\n  deny all;\n}\n```\n\n### CORS (Example)\n\n```nginx\nlocation /api/ {\n  add_header Access-Control-Allow-Origin \"https://app.example.com\" always;\n  add_header Access-Control-Allow-Credentials \"true\" always;\n  if ($request_method = OPTIONS) {\n    add_header Access-Control-Allow-Methods \"GET, POST, OPTIONS\";\n    add_header Access-Control-Allow-Headers \"Authorization, Content-Type\";\n    return 204;\n  }\n  proxy_pass http://app;\n}\n```\n\n## Logging & Debug {.cols-3}\n\n### Formats\n\n```nginx\nlog_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                '$status $body_bytes_sent \"$http_referer\" '\n                '\"$http_user_agent\" \"$http_x_forwarded_for\" '\n                '$request_time $upstream_response_time';\n\naccess_log /var/log/nginx/access.log main;\nerror_log  /var/log/nginx/error.log warn;\n```\n\n### Per‑Location Logging\n\n```nginx\nlocation /healthz { access_log off; }\n```\n\n### Debugging\n\n```shell script\n$ sudo nginx -t\n$ sudo nginx -s reload\n$ tail -f /var/log/nginx/error.log\n```\n\n## Upstreams & LB {.cols-3}\n\n### Strategies\n\n| Directive     | Meaning                 |\n| ------------- | ----------------------- |\n| (default)     | round‑robin             |\n| `least_conn`  | least connections       |\n| `ip_hash`     | sticky by client IP     |\n| `hash key`    | hash by custom key      |\n\n{.show-header}\n\n### Example Upstream\n\n```nginx\nupstream api_backends {\n  least_conn;\n  server 10.0.0.11:8080 max_fails=3 fail_timeout=30s;\n  server 10.0.0.12:8080 max_fails=3 fail_timeout=30s;\n  # server backup.example:8080 backup;\n}\n```\n\n### Health & Failover\n\n```nginx\nproxy_next_upstream error timeout http_502 http_503 http_504;\nproxy_next_upstream_tries 3;\n```\n\n## Useful Variables {.cols-3}\n\n### Request & Client\n\n| Variable               | Description                  |\n| --------------------- | ---------------------------- |\n| `$host`               | Host header / server name    |\n| `$server_name`        | Chosen server_name           |\n| `$remote_addr`        | Client IP                    |\n| `$http_user_agent`    | User‑Agent                   |\n| `$request_method`     | GET/POST/...                 |\n\n{.show-header .bold-first}\n\n### Paths & Files\n\n| Variable                 | Description            |\n| ----------------------- | ---------------------- |\n| `$document_root`        | Current root           |\n| `$realpath_root`        | Symlink‑resolved root  |\n| `$request_uri`          | Path + query           |\n| `$uri`                  | Normalized URI         |\n| `$args`                 | Raw query string       |\n\n{.show-header .bold-first}\n\n### Upstream\n\n| Variable                    | Description        |\n| -------------------------- | ------------------ |\n| `$upstream_addr`           | Upstream server(s) |\n| `$upstream_status`         | Upstream status    |\n| `$upstream_response_time`  | Time from upstream |\n\n{.show-header .bold-first}\n\n## Stream (TCP/UDP) {.cols-3}\n\n### TCP Proxy\n\n```nginx\nstream {\n  upstream db {\n    server 10.0.0.10:5432;\n    server 10.0.0.11:5432;\n  }\n  server {\n    listen 5432;\n    proxy_pass db;\n  }\n}\n```\n\n### UDP Proxy\n\n```nginx\nstream {\n  server {\n    listen 53 udp;\n    proxy_responses 1;\n    proxy_timeout 2s;\n    proxy_pass 1.1.1.1:53;\n  }\n}\n```\n\n### Access Control\n\n```nginx\nstream {\n  server {\n    listen 6379;\n    allow 10.0.0.0/8;\n    deny all;\n    proxy_pass 127.0.0.1:6379;\n  }\n}\n```\n\n## Snippets {.cols-3}\n\n### Security Snippet\n\n```nginx\n# /etc/nginx/snippets/security.conf\nserver_tokens off;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header Referrer-Policy \"no-referrer-when-downgrade\" always;\n```\n\n### PHP Snippet\n\n```nginx\n# /etc/nginx/snippets/fastcgi-php.conf\nlocation ~ \\.php$ {\n  include fastcgi_params;\n  fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n  fastcgi_param DOCUMENT_ROOT $realpath_root;\n  fastcgi_pass unix:/run/php/php8.2-fpm.sock;\n}\n```\n\n### Proxy Headers Snippet\n\n```nginx\n# /etc/nginx/snippets/proxy-headers.conf\nproxy_set_header Host $host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto $scheme;\n```\n\n"
}